// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// select_genes_cpp
DataFrame select_genes_cpp(Environment BM_sn, Environment BM_mean, double zscore_sn_threshold, double zscore_mean_threshold);
RcppExport SEXP _anglemania_select_genes_cpp(SEXP BM_snSEXP, SEXP BM_meanSEXP, SEXP zscore_sn_thresholdSEXP, SEXP zscore_mean_thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type BM_sn(BM_snSEXP);
    Rcpp::traits::input_parameter< Environment >::type BM_mean(BM_meanSEXP);
    Rcpp::traits::input_parameter< double >::type zscore_sn_threshold(zscore_sn_thresholdSEXP);
    Rcpp::traits::input_parameter< double >::type zscore_mean_threshold(zscore_mean_thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(select_genes_cpp(BM_sn, BM_mean, zscore_sn_threshold, zscore_mean_threshold));
    return rcpp_result_gen;
END_RCPP
}
// scaleK
void scaleK(Environment BM, const NumericVector& sums, const NumericVector& mu, const NumericVector& delta, int nrow);
RcppExport SEXP _anglemania_scaleK(SEXP BMSEXP, SEXP sumsSEXP, SEXP muSEXP, SEXP deltaSEXP, SEXP nrowSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type BM(BMSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type sums(sumsSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    scaleK(BM, sums, mu, delta, nrow);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_anglemania_select_genes_cpp", (DL_FUNC) &_anglemania_select_genes_cpp, 4},
    {"_anglemania_scaleK", (DL_FUNC) &_anglemania_scaleK, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_anglemania(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
